{"version":3,"sources":["component/Expense/ExpenseDate.js","component/UI/Card.js","component/Expense/ExpenseItem.js","component/Expense/ExpensesFilter.js","component/Chart/ChartBar.js","component/Chart/Chart.js","component/Expense/ExpenseChart.js","component/Expense/Expenses.js","component/NewExpense/ExpenseForm.js","component/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","class","children","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","sumValue","Math","round","style","height","label","Chart","sumExpense","dataPoints","list","map","dataPoint","ExpenseChart","expenses","expense","getMonth","parseInt","Expenses","useState","filteredYear","setFilteredYear","filteredExpense","items","filter","item","toString","expensesContent","length","id","selectedYear","border","backgroundColor","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","newExpenseData","Date","onSaveExchangeData","type","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","newEnteredExpenseData","random","console","log","onNewExpenseEntered","INITIAL_EXPENCES","App","setExpenses","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6003351.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month=props.date.toLocaleString('en-US',{month:'long'});\r\n    const day=props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year=props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n                <div className=\"expense-date-year_month\">\r\n                    <div className=\"expense-date__month\">{month}</div>\r\n                    <div className=\"expense-date__year\">{year}</div>\r\n                </div>\r\n                <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes='card '+props.className;\r\n    return (<div class={classes}>{props.children}</div>);\r\n};\r\n\r\nexport default Card;","import React ,{ useState } from 'react';\r\nimport './ExpenseItem.css';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n    // const [title,setTitle]=useState(props.title);   //gives array. first element is current state value of var and second ele. is a function to update that value\r\n    \r\n    // const clickHandler=()=>{\r\n    //     setTitle('updated!');       //takes argument new value of an variable and it forces to re-execute component function.it doesn't change value right away but schedules.\r\n    //     console.log(title);\r\n    // };\r\n\r\n    return (\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date}/>\r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React,{ useState } from \"react\";\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props)=>{\r\n    let barFillHeight='0%';\r\n\r\n    if(props.sumValue>0)\r\n        barFillHeight=Math.round((props.value/props.sumValue)*100)+'%';\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label} </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ChartBar;","import React,{ useState } from \"react\";\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props)=>{\r\n    let sumExpense=0;\r\n    for(const list of props.dataPoints){\r\n        sumExpense+=list.value;\r\n    }\r\n   \r\n    return <div className=\"chart\">\r\n        {props.dataPoints.map(dataPoint=>(\r\n            <ChartBar \r\n                key={dataPoint.label}\r\n                value={dataPoint.value} \r\n                sumValue={sumExpense} \r\n                label={dataPoint.label}\r\n            />\r\n        ))}\r\n    </div>\r\n};\r\n\r\nexport default Chart;","import Chart from '../Chart/Chart';\r\n\r\nconst ExpenseChart = (props) =>{\r\n    const dataPoints=[\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'May',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'Jul',value:0},\r\n        {label:'Aug',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0},\r\n    ];\r\n\r\n    \r\n    for(const expense of props.expenses){\r\n        const month=expense.date.getMonth();\r\n        dataPoints[month].value+=parseInt(expense.amount);\r\n    }\r\n\r\n    return <Chart dataPoints={dataPoints}/>\r\n};\r\n\r\nexport default ExpenseChart;","import React, { useState } from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpenseChart from './ExpenseChart';\r\n\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpense=props.items.filter(item=>{\r\n    return item.date.getFullYear().toString()===filteredYear;\r\n  })\r\n\r\n\r\n  const paraHr={\r\n    height:\"2px\",\r\n    border:\"1px white solid\",\r\n    backgroundColor:\"white\",\r\n  };\r\n\r\n  let expensesContent = <h3>No Expense Found</h3>;\r\n\r\n  if(filteredExpense.length>0){\r\n    expensesContent=filteredExpense.map((item)=>\r\n          (\r\n            <ExpenseItem\r\n              key={item.id}\r\n              title={item.title}\r\n              amount={item.amount}\r\n              date={item.date}\r\n            />\r\n          ));\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <hr style={paraHr}/>\r\n        <ExpenseChart expenses={filteredExpense}/>\r\n        {expensesContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n\r\n//if this file goes big remove expense content as 5.7🙂","import React ,{ useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle,setEnteredTitle]=useState('');\r\n    const [enteredAmount,setEnteredAmount]=useState('');\r\n    const [enteredDate,setEnteredDate]=useState('');\r\n\r\n    const titleHandler=(event)=>{\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n    const amountHandler=(event)=>{\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n    const dateHandler =(event)=>{\r\n        setEnteredDate(event.target.value);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const newExpenseData={\r\n            title:enteredTitle,\r\n            amount:enteredAmount,\r\n            date:new Date(enteredDate)\r\n        };\r\n        // console.log(newExpenseData);\r\n        props.onSaveExchangeData(newExpenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }; \r\n\r\n    //instead of having three individual state, we can have a one state which has all these three values shown at end of file\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"Date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n\r\n\r\n//MultiState\r\n// const [userInput,setUserInput]=useState({\r\n//     enteredTitle:'',\r\n//     enteredAmount:'',\r\n//     enteredDate:''\r\n// });\r\n\r\n// const titleHandler = (event)=>{\r\n//     // setUserInput({\r\n//     //     ...userInput,\r\n//     //     enteredTitle:event.target.value,\r\n//     // });\r\n\r\n//     //as react schedules updateState process and we can have many already scheduled processes.The set we are considering current state(i.e userInput) might be wrong.\r\n//     //and we are updating in wrong state. So instead above method , below method is more prominent and gives current prevState keeping eye on all schedules \r\n//     console.log(event.target.value);\r\n//     setUserInput((prevState)=>{\r\n//         return {\r\n//             ...prevState,\r\n//             enteredTitle:event.target.value,\r\n//         }\r\n//     })\r\n//     console.log(userInput);\r\n// };\r\n\r\n// const amountHandler=(event)=>{\r\n//     setUserInput({\r\n//         ...userInput,\r\n//         enteredAmount:event.target.value,\r\n//     });\r\n// };\r\n\r\n// const dateHandler=(event)=>{\r\n//     setUserInput({\r\n//         ...userInput,\r\n//         enteredDate:event.target.value,\r\n//     });\r\n// };\r\n","import React,{useState} from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense =(props)=>{\r\n    const [isEditing,setIsEditing] = useState(false);\r\n    const saveExchangeDataHandler=(newEnteredExpenseData) => {\r\n        const newExpenseData={\r\n            ...newEnteredExpenseData,\r\n            id:Math.random().toString()\r\n        };\r\n\r\n        console.log(newExpenseData);\r\n        props.onNewExpenseEntered(newExpenseData);\r\n\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startAddHandler = () =>{\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopAddHandler = () =>{\r\n        setIsEditing(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing && \r\n            (<button onClick={startAddHandler}>Add New Expense</button>)}\r\n\r\n            {isEditing && \r\n            (<ExpenseForm  onCancel={stopAddHandler} onSaveExchangeData={saveExchangeDataHandler}/>)}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React,{useState} from 'react';\nimport Expense from \"./component/Expense/Expenses\";\nimport NewExpense from \"./component/NewExpense/NewExpense\";\n\nconst INITIAL_EXPENCES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n\n  const [expenses,setExpenses] =useState(INITIAL_EXPENCES);\n \n  const newExpenseHandler = (newExpenseData) => {\n    setExpenses(prevState=>{\n      return [newExpenseData,...prevState];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onNewExpenseEntered={newExpenseHandler}/>\n      <Expense items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}